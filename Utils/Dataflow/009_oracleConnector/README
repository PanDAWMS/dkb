=============
* Stage 009 *
=============

1. Description
--------------
Takes data from Oracle with SQL query, stored in file, and output
them as NDJSON.

Currently works with specific set of queries only:
 * prodsys2ES + datasets
 * prodsys2ES

The goal is to make it work with any number and combination of queries.

2. HowTo
--------
To run stage, use:

  ./oracle2JSON.py --config CONFIG

A template for the configuration file can be obtained in Dataflow's
corresponding directory:

  Utils/Dataflow/config/009.cfg.example

3. Task Chain
-------------
The query prodsys2ES includes the subquery that obtains the task's chain_data:
taskids of tasks in the task chain, starting with the root and ending with the
given task.

The root of a given task is found by recursively looking for the current
task's parent, starting with the given task, until the task is encountered
that has no parent - this is the root. The parent of a task is found by
comparing the datasets: task's input dataset is one of the parent's output
datasets. After finding the root, ids of the encountered tasks are aggregated
into a string.

Some tasks have their parent specified in the "parent_tid" field, and
originally it was planned to find each parent in this way if possible, and
by comparing input/output otherwise. However, using conditions in Oracle's
recursive construction START WITH ... CONNECT BY leads to problems with
infinite cycles. Therefore, only the input/output mechanism was implemented
- it is slower, but more reliable.
