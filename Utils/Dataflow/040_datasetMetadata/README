=============
* Stage 40  *
=============

Description
-----------
Here we try to extract from Impala metadata about datasets, mentioned in
different documents.
Important thing is that we don't know the exact dataset names, so we are looking
for something resembling via regular expressions.

Input
-----
...comes from PDFAnalyzer.
It is a JSON file of the following structure:
<GlanceID>.json
{{{
{
    "campaigns": [], 
    "datasets": {
       "montecarlo": [],
       "realdata": []
    }, 
    "datasetIDs": {
      "Tablename1": "id1 id2 id3 id4",
      "Tablename2": "id10 id11 id12"
    }, 
    "title": ""
}
}}}

Output
------
...goes to CSV files.
For now - local files, but later the metadata will be directly output to
HDFS (via Impala CSV table, as I see no other way but downloading data to the
locat store and then send them back to the HDFS, which looks very poor solution
for me).

output/554.csv -- local file system output
output/impala-csv-example  -- HDFS output (original filename: '114cc20ecd8f3767-5a147bce79c4a4a1_56435604_data.0.')

TODO
----
...

HDFS
----
When data are otputted to HDFS direcly (via Impala table), there's no garantee
that there will be only unique CSV records. So do not forget to clear
dkb_temp.datasets before using, and then do not run get_metadata over the same
file twice.

To output data via Impala to HDFS directly, it is necessary to create temp
table:
{{{
CREATE TABLE dkb_temp.datasets 
  ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
  LOCATION '/user/DKB/temp/datasets'
AS 
SELECT 'realdata' as dataType,
       9999999 as glanceid,
       ifnull(PS1.name, PS2.name) as `name`,
       ifnull(PS1.task_id, PS2.taskid) as `tid`,
       ifnull(PS1.task_pid, PS2.parent_tid) as `chain_tid`,
       ifnull(PS1.phys_group, PS2.phys_group) as `phys_group`,
       ifnull(PS1.events, PS2.events) as `events`,
       if(PS1.`files` is not NULL and PS1.`files`=0, PS2.`files`, PS1.`files`) as `files`,
       ifnull(PS1.status, PS2.status) as `status`,
       if(PS2.`timestamp` is not NULL and PS1.`timestamp` < PS2.`timestamp`, PS1.`timestamp`, PS2.`timestamp`) as `timestamp`,
       PS2.pr_id as `pr_id`,
       PS2.campaign as `campaign`,
       PS2.ddm_erase_timestamp as `ddm_erase_timestamp`,
       PS1.vuid as `vuid`,
       PS1.grid_exec as `grid_exec`,
       PS1.se as `se`,
       PS1.file_size_mb as `file_size_mb`
  FROM
  dkb.T_PRODUCTIONDATASETS_EXEC as PS1
  FULL OUTER JOIN
  dkb.T_PRODUCTION_DATASET as PS2
  ON PS2.name = PS1.name

  WHERE 1=0;
}}}

